diff --git a/src/pages/Quiz.tsx b/src/pages/Quiz.tsx
index 1111111..2222222 100644
--- a/src/pages/Quiz.tsx
+++ b/src/pages/Quiz.tsx
@@ -1,6 +1,10 @@
 import { useState } from "react";
 import QuizReviewComponent from "@/components/quiz/QuizReviewComponent";
+import QuizCompletionModal from "@/components/quiz/QuizCompletionModal";
 
 export default function QuizPage() {
+  const [showCompletionModal, setShowCompletionModal] = useState(false);
+
+  const handleQuizComplete = () => setShowCompletionModal(true);
+
   return (
     <div className="quiz-page">
       {/* ... resto do conteúdo do Quiz ... */}
@@ -8,6 +12,10 @@ export default function QuizPage() {
-      <QuizReviewComponent />
+      <QuizReviewComponent onComplete={handleQuizComplete} />
+
+      {showCompletionModal && (
+        <QuizCompletionModal onClose={() => setShowCompletionModal(false)} />
+      )}
     </div>
   );
 }
diff --git a/src/components/quiz/QuizReviewComponent.tsx b/src/components/quiz/QuizReviewComponent.tsx
index 3333333..4444444 100644
--- a/src/components/quiz/QuizReviewComponent.tsx
+++ b/src/components/quiz/QuizReviewComponent.tsx
@@ -1,7 +1,11 @@
 import { Button } from "@/components/ui/button";
 
-export default function QuizReviewComponent() {
+export default function QuizReviewComponent({ onComplete }) {
   return (
     <div className="quiz-review">
       {/* ... revisão das respostas ... */}
-      <Button onClick={() => {}} size="lg">
-        Finalizar Questionário
-      </Button>
+      <Button onClick={onComplete} size="lg">
+        Finalizar Questionário
+      </Button>
     </div>
   );
 }
diff --git a/src/components/quiz/QuizCompletionModal.tsx b/src/components/quiz/QuizCompletionModal.tsx
index 5555555..6666666 100644
--- a/src/components/quiz/QuizCompletionModal.tsx
+++ b/src/components/quiz/QuizCompletionModal.tsx
@@ -1,4 +1,37 @@
 import { useState } from "react";
 import { supabase } from "@/lib/supabaseClient";
 import { Button } from "@/components/ui/button";
-
-export default function QuizCompletionModal() {
-  return <div>TODO</div>;
+export default function QuizCompletionModal({ onClose }) {
+  const [step, setStep] = useState(1);
+
+  const finalizeQuiz = async () => {
+    const user = (await supabase.auth.getUser()).data.user;
+    if (!user) return;
+
+    const { error } = await supabase
+      .from("quiz_submissions")
+      .update({
+        completed: true,
+        completed_at: new Date().toISOString(),
+      })
+      .eq("user_id", user.id);
+
+    if (error) {
+      console.error("Erro ao finalizar quiz:", error);
+      return;
+    }
+
+    setStep(2);
+
+    setTimeout(() => {
+      setStep(3);
+    }, 2000);
+  };
+
+  return (
+    <div className="modal-backdrop">
+      <div className="modal">
+        {step === 1 && (
+          <>
+            <p>Finalizando seu questionário...</p>
+            <Button onClick={finalizeQuiz}>Confirmar Finalização</Button>
+          </>
+        )}
+        {step === 2 && <p>Verificando respostas e preparando envio...</p>}
+        {step === 3 && (
+          <>
+            <p>Questionário concluído e webhook disparado!</p>
+            <Button onClick={onClose}>Ir para Dashboard</Button>
+          </>
+        )}
+      </div>
+    </div>
+  );
+}
